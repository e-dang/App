name: Workouts

env:
  DOCKER_BUILDKIT: 1
  DIRECTORY: backend/workouts

on:
  pull_request:
    branches:
      - main
    paths:
      - backend/workouts/**
      - .github/workflows/workouts.yml
  push:
    branches:
      - main
    paths:
      - backend/workouts/**
      - .github/workflows/workouts.yml
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: cd ${DIRECTORY} && yarn install

      - name: Install dependencies
        run: cd ${DIRECTORY} && yarn lint

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build dev Docker image
        run: cd ${DIRECTORY} && yarn build:dev

      - name: Export dev Docker image
        run: docker save workouts:dev > /tmp/workouts.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: workouts
          path: /tmp/workouts.tar

  unit-test:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Download Docker image
        uses: actions/download-artifact@v2
        with:
          name: workouts
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/workouts.tar
          docker image ls -a

      - name: Unit test
        run: cd ${DIRECTORY} && yarn test:unit

  integration-test:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: cd ${DIRECTORY} && yarn install

      - name: Generate env files
        run: cd ${DIRECTORY} && yarn generate:env

      - name: Download Docker image
        uses: actions/download-artifact@v2
        with:
          name: workouts
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/workouts.tar
          docker image ls -a

      - name: Start test stack
        run: cd ${DIRECTORY} && yarn up:test --wait

      - name: Run tests
        run: docker compose -p test exec -T workouts yarn jest --config=jest.config.int.js

  push-staging:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - lint
      - unit-test
      - integration-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate tag
        id: tag
        run: |
          sha=${GITHUB_SHA::8}
          ts=$(date +%s)
          echo "::set-output name=TAG::dev-${sha}-${ts}"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/prod/Dockerfile
          push: true
          tags: ericdang/workouts:${{ steps.tag.outputs.TAG }}
