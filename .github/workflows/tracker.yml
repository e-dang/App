name: Tracker

env:
  DOCKER_BUILDKIT: 1

on:
  pull_request:
    branches: ['main']
    paths: ['backend/tracker/**']
  push:
    branches: ['main']
    paths: ['backend/tracker/**']
  workflow_dispatch:

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install SOPS
        uses: mdgreenwald/mozilla-sops-action@v1
        id: install
        with:
          version: latest

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: v0.29.0

      - name: Install Terraform Docs
        run: |
          curl -L "$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | \
          grep -o -E "https://.+?-linux-amd64.tar.gz")" > terraform-docs.tgz && \
          tar xzf terraform-docs.tgz && \
          chmod +x terraform-docs && \
          sudo mv terraform-docs /usr/bin/

      - name: Install TFSec
        run: |
          wget https://github.com/aquasecurity/tfsec/releases/download/v0.47.0/tfsec-linux-amd64 && \
          chmod +x tfsec-linux-amd64 && \
          sudo mv tfsec-linux-amd64 /usr/bin/tfsec

      - name: Install and Run Pre-commit
        uses: pre-commit/action@v2.0.3

  test-local:
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: tracker-dev
      RESOURCE_GROUP: tracker-stack-dev
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Setup yarn
        uses: actions/setup-node@v2
        with:
          node-version: '16.3.x'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install SOPS
        uses: mdgreenwald/mozilla-sops-action@v1
        id: install
        with:
          version: latest

      - name: Install telepresence
        run: |
          sudo curl -fL https://app.getambassador.io/download/tel2/linux/amd64/latest/telepresence -o /usr/local/bin/telepresence && \
          sudo chmod a+x /usr/local/bin/telepresence

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        id: install
        with:
          version: '<version>' # default is latest stable

      - name: Add private key to keyring
        run: |
          echo "${{ secrets.SECRETS_DECRYPTION_KEY }}" | gpg --import

      - name: Login to azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Connect to cluster context
        run: |
          az aks get-credentials -n ${CLUSTER_NAME} --resource-group ${RESOURCE_GROUP} --admin
          telepresence connect

      - name: Build docker image
        run: yarn build-dev

      - name: Run unit tests
        run: yarn test -m unit

      - name: Run integration tests
        run: yarn test -m integration

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: backend/tracker/docker/Dockerfile
          context: backend/tracker
          build-args: |
            BUILD_ENVIRONMENT=production
          tags: ericdang/tracker:staging-${GITHUB_SHA::8}-$(date +%s)
