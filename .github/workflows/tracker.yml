name: Tracker

env:
  DOCKER_BUILDKIT: 1

on:
  pull_request:
    branches:
      - main
    paths:
      - backend/tracker/**
      - .github/workflows/tracker.yml
  push:
    branches:
      - main
    paths:
      - backend/tracker/**
      - .github/workflows/tracker.yml
  workflow_dispatch:

jobs:
  test-whitebox:
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: tracker-dev
      RESOURCE_GROUP: tracker-stack-dev
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Setup yarn
        uses: actions/setup-node@v2
        with:
          node-version: '16.3.x'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.11.0/yq_linux_amd64 -O /usr/bin/yq &&\
          sudo chmod +x /usr/bin/yq

      - name: Install SOPS
        uses: mdgreenwald/mozilla-sops-action@v1
        with:
          version: latest

      - name: Install telepresence
        run: |
          sudo curl -fL https://app.getambassador.io/download/tel2/linux/amd64/latest/telepresence -o /usr/local/bin/telepresence && \
          sudo chmod +x /usr/local/bin/telepresence

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Add private key to keyring
        run: |
          echo "${{ secrets.SECRETS_DECRYPTION_KEY }}" | gpg --import

      - name: Login to azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Connect to cluster context
        run: |
          az aks get-credentials -n ${CLUSTER_NAME} --resource-group ${RESOURCE_GROUP} --admin
          telepresence connect

      - name: Load cached docker layers
        uses: actions/cache@v2
        with:
          path: |
            /tmp/.buildx-cache-dev
            /tmp/.buildx-cache-prod
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build dev docker image
        uses: docker/build-push-action@v2
        with:
          push: false
          file: backend/tracker/docker/Dockerfile
          context: backend/tracker
          load: true
          build-args: |
            BUILD_ENVIRONMENT=dev
          tags: ericdang/tracker:dev
          cache-from: type=local,src=/tmp/.buildx-cache-dev
          cache-to: type=local,dest=/tmp/.buildx-cache-new-dev

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move dev cache
        continue-on-error: true
        run: |
          rm -rf /tmp/.buildx-cache-dev
          mv /tmp/.buildx-cache-new-dev /tmp/.buildx-cache-dev

      - name: Run unit tests
        run: yarn test -m unit

      - name: Run integration tests
        run: NETWORK="--network=host" yarn test -m integration

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate tag
        id: tag
        run: |
          sha=${GITHUB_SHA::8}
          ts=$(date +%s)
          echo "::set-output name=TAG::staging-${sha}-${ts}"

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          file: backend/tracker/docker/Dockerfile
          context: backend/tracker
          build-args: |
            BUILD_ENVIRONMENT=prod
          tags: ericdang/tracker:${{ steps.tag.outputs.TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache-prod
          cache-to: type=local,dest=/tmp/.buildx-cache-new-prod

      - name: Move prod cache
        continue-on-error: true
        run: |
          rm -rf /tmp/.buildx-cache-prod
          mv /tmp/.buildx-cache-new-prod /tmp/.buildx-cache-prod
