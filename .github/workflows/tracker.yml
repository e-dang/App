name: Tracker

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1

on:
  pull_request:
    branches: ['main']
    paths: ['backend/tracker/**']
  push:
    branches: ['main']
    paths: ['backend/tracker/**']
  workflow_dispatch:

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Run all pre-commit hooks on all the files.
      # Getting only staged files can be tricky in case a new PR is opened
      # since the action is run on a branch in detached head state
      - name: Install and Run Pre-commit
        uses: pre-commit/action@v2.0.3

  test-local:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install kind cluster
        uses: engineerd/setup-kind@v0.5.0

      # - name: Install terraform
      #   uses: hashicorp/setup-terraform@v1

      - name: Install terraspace
        run: sudo gem install terraspace

      - name: Install telepresence
        run: |
          sudo curl -fL https://app.getambassador.io/download/tel2/linux/amd64/latest/telepresence -o /usr/local/bin/telepresence && \
          sudo chmod a+x /usr/local/bin/telepresence

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Setup cluster
        run: |
          cd infra && \
          terraspace up flux -y && \
          telepresence connect

      - name: Build docker image
        run: yarn build-dev

      - name: Run tests
        run: |
          yarn dev & \
          yarn test

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: backend/tracker/docker/Dockerfile
          context: backend/tracker
          build-args: |
            BUILD_ENVIRONMENT=production
          tags: ericdang/tracker:${GITHUB_SHA::8}-$(date +%s)
